(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";
// Â© 2001-2015 INOVx Solutions, Inc.
// 114 Pacifica Suite 300, Irvine, CA 92618 USA
// All rights reserved.
//
// This software is confidential, proprietary and unpublished property of
// INOVx Solutions, Inc.  It may NOT be copied in part or in whole on any
// medium, either electronic or printed, without the express written consent
// of INOVx Solutions, Inc.
Object.defineProperty(exports, "__esModule", { value: true });
var React = require("react");
var ReactDOM = require("react-dom");
var Inovx = require("shared.web.client");
var UrlUtilities = Inovx.Shared.Common.UrlUtilities;
function loadContentPage(baseAppUrl, contentPagePath, containerBaseUrl) {
    $.ajax({
        type: 'GET',
        url: baseAppUrl + contentPagePath,
        data: { containerBaseUrl: containerBaseUrl },
        success: function (data) {
            unmount();
            $('#appGroupApp').html(data);
        },
        error: function (error, test, test2) {
            if (error.status == 440) {
                loadContentPage(baseAppUrl, '/Shared/NoLicense', null);
            }
            else {
                unmount();
                $('#appGroupApp').html(error.responseText);
            }
        }
    });
}
function onAppGroupLoad() {
    var appName = window.CONTENT_APP_NAME;
    var appPath = window.CONTENT_APP_PATH;
    if (appName && appPath) {
        renderLoading();
        var baseAppUrl = UrlUtilities.getBaseUrl() + '/' + appName;
        loadContentPage(baseAppUrl, '/Home/Content', appPath);
    }
}
function renderLoading() {
    unmount();
    var container = document.createElement('div');
    container.className = 'container';
    var appGroupContainer = document.getElementById('appGroupApp');
    appGroupContainer.innerHTML = '';
    appGroupContainer.appendChild(container);
    ReactDOM.render(React.createElement("div", { className: "preloader-container" },
        React.createElement("div", { className: "preloader-content pagination-centered" }, "Loading..."),
        React.createElement("div", { className: "preloader-content preloader-img-container" },
            React.createElement("div", { className: "small1" },
                React.createElement("div", { className: "small ball smallball1" }),
                React.createElement("div", { className: "small ball smallball2" }),
                React.createElement("div", { className: "small ball smallball3" }),
                React.createElement("div", { className: "small ball smallball4" })),
            React.createElement("div", { className: "small2" },
                React.createElement("div", { className: "small ball smallball5" }),
                React.createElement("div", { className: "small ball smallball6" }),
                React.createElement("div", { className: "small ball smallball7" }),
                React.createElement("div", { className: "small ball smallball8" })),
            React.createElement("div", { className: "target" },
                React.createElement("div", { className: "big ball" })))), container);
}
function unmount() {
    var existingApp = $('#appGroupApp').find('[class=container]');
    if (existingApp.length > 0) {
        ReactDOM.unmountComponentAtNode(existingApp[0]);
    }
}
$(document).ready(function () {
    if ($('#appGroupApp').find('.landing-page-container').length < 1) {
        renderLoading();
    }
    InovxLoader.loadedOnce(function () {
        InovxLoader.addLanguage('appGroup', UrlUtilities.getApplicationUrl(), function () {
            onAppGroupLoad();
        });
    });
});

},{"react":"react","react-dom":"react-dom","shared.web.client":"shared.web.client"}]},{},[1])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9icm93c2VyLXBhY2svX3ByZWx1ZGUuanMiLCJiaW4vanMtb3V0L2FwcC9BcHAuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUNBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6ImdlbmVyYXRlZC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24oKXtmdW5jdGlvbiByKGUsbix0KXtmdW5jdGlvbiBvKGksZil7aWYoIW5baV0pe2lmKCFlW2ldKXt2YXIgYz1cImZ1bmN0aW9uXCI9PXR5cGVvZiByZXF1aXJlJiZyZXF1aXJlO2lmKCFmJiZjKXJldHVybiBjKGksITApO2lmKHUpcmV0dXJuIHUoaSwhMCk7dmFyIGE9bmV3IEVycm9yKFwiQ2Fubm90IGZpbmQgbW9kdWxlICdcIitpK1wiJ1wiKTt0aHJvdyBhLmNvZGU9XCJNT0RVTEVfTk9UX0ZPVU5EXCIsYX12YXIgcD1uW2ldPXtleHBvcnRzOnt9fTtlW2ldWzBdLmNhbGwocC5leHBvcnRzLGZ1bmN0aW9uKHIpe3ZhciBuPWVbaV1bMV1bcl07cmV0dXJuIG8obnx8cil9LHAscC5leHBvcnRzLHIsZSxuLHQpfXJldHVybiBuW2ldLmV4cG9ydHN9Zm9yKHZhciB1PVwiZnVuY3Rpb25cIj09dHlwZW9mIHJlcXVpcmUmJnJlcXVpcmUsaT0wO2k8dC5sZW5ndGg7aSsrKW8odFtpXSk7cmV0dXJuIG99cmV0dXJuIHJ9KSgpIiwiXCJ1c2Ugc3RyaWN0XCI7XHJcbi8vIMKpIDIwMDEtMjAxNSBJTk9WeCBTb2x1dGlvbnMsIEluYy5cclxuLy8gMTE0IFBhY2lmaWNhIFN1aXRlIDMwMCwgSXJ2aW5lLCBDQSA5MjYxOCBVU0FcclxuLy8gQWxsIHJpZ2h0cyByZXNlcnZlZC5cclxuLy9cclxuLy8gVGhpcyBzb2Z0d2FyZSBpcyBjb25maWRlbnRpYWwsIHByb3ByaWV0YXJ5IGFuZCB1bnB1Ymxpc2hlZCBwcm9wZXJ0eSBvZlxyXG4vLyBJTk9WeCBTb2x1dGlvbnMsIEluYy4gIEl0IG1heSBOT1QgYmUgY29waWVkIGluIHBhcnQgb3IgaW4gd2hvbGUgb24gYW55XHJcbi8vIG1lZGl1bSwgZWl0aGVyIGVsZWN0cm9uaWMgb3IgcHJpbnRlZCwgd2l0aG91dCB0aGUgZXhwcmVzcyB3cml0dGVuIGNvbnNlbnRcclxuLy8gb2YgSU5PVnggU29sdXRpb25zLCBJbmMuXHJcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcclxudmFyIFJlYWN0ID0gcmVxdWlyZShcInJlYWN0XCIpO1xyXG52YXIgUmVhY3RET00gPSByZXF1aXJlKFwicmVhY3QtZG9tXCIpO1xyXG52YXIgSW5vdnggPSByZXF1aXJlKFwic2hhcmVkLndlYi5jbGllbnRcIik7XHJcbnZhciBVcmxVdGlsaXRpZXMgPSBJbm92eC5TaGFyZWQuQ29tbW9uLlVybFV0aWxpdGllcztcclxuZnVuY3Rpb24gbG9hZENvbnRlbnRQYWdlKGJhc2VBcHBVcmwsIGNvbnRlbnRQYWdlUGF0aCwgY29udGFpbmVyQmFzZVVybCkge1xyXG4gICAgJC5hamF4KHtcclxuICAgICAgICB0eXBlOiAnR0VUJyxcclxuICAgICAgICB1cmw6IGJhc2VBcHBVcmwgKyBjb250ZW50UGFnZVBhdGgsXHJcbiAgICAgICAgZGF0YTogeyBjb250YWluZXJCYXNlVXJsOiBjb250YWluZXJCYXNlVXJsIH0sXHJcbiAgICAgICAgc3VjY2VzczogZnVuY3Rpb24gKGRhdGEpIHtcclxuICAgICAgICAgICAgdW5tb3VudCgpO1xyXG4gICAgICAgICAgICAkKCcjYXBwR3JvdXBBcHAnKS5odG1sKGRhdGEpO1xyXG4gICAgICAgIH0sXHJcbiAgICAgICAgZXJyb3I6IGZ1bmN0aW9uIChlcnJvciwgdGVzdCwgdGVzdDIpIHtcclxuICAgICAgICAgICAgaWYgKGVycm9yLnN0YXR1cyA9PSA0NDApIHtcclxuICAgICAgICAgICAgICAgIGxvYWRDb250ZW50UGFnZShiYXNlQXBwVXJsLCAnL1NoYXJlZC9Ob0xpY2Vuc2UnLCBudWxsKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgICAgIHVubW91bnQoKTtcclxuICAgICAgICAgICAgICAgICQoJyNhcHBHcm91cEFwcCcpLmh0bWwoZXJyb3IucmVzcG9uc2VUZXh0KTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH0pO1xyXG59XHJcbmZ1bmN0aW9uIG9uQXBwR3JvdXBMb2FkKCkge1xyXG4gICAgdmFyIGFwcE5hbWUgPSB3aW5kb3cuQ09OVEVOVF9BUFBfTkFNRTtcclxuICAgIHZhciBhcHBQYXRoID0gd2luZG93LkNPTlRFTlRfQVBQX1BBVEg7XHJcbiAgICBpZiAoYXBwTmFtZSAmJiBhcHBQYXRoKSB7XHJcbiAgICAgICAgcmVuZGVyTG9hZGluZygpO1xyXG4gICAgICAgIHZhciBiYXNlQXBwVXJsID0gVXJsVXRpbGl0aWVzLmdldEJhc2VVcmwoKSArICcvJyArIGFwcE5hbWU7XHJcbiAgICAgICAgbG9hZENvbnRlbnRQYWdlKGJhc2VBcHBVcmwsICcvSG9tZS9Db250ZW50JywgYXBwUGF0aCk7XHJcbiAgICB9XHJcbn1cclxuZnVuY3Rpb24gcmVuZGVyTG9hZGluZygpIHtcclxuICAgIHVubW91bnQoKTtcclxuICAgIHZhciBjb250YWluZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcclxuICAgIGNvbnRhaW5lci5jbGFzc05hbWUgPSAnY29udGFpbmVyJztcclxuICAgIHZhciBhcHBHcm91cENvbnRhaW5lciA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhcHBHcm91cEFwcCcpO1xyXG4gICAgYXBwR3JvdXBDb250YWluZXIuaW5uZXJIVE1MID0gJyc7XHJcbiAgICBhcHBHcm91cENvbnRhaW5lci5hcHBlbmRDaGlsZChjb250YWluZXIpO1xyXG4gICAgUmVhY3RET00ucmVuZGVyKFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwgeyBjbGFzc05hbWU6IFwicHJlbG9hZGVyLWNvbnRhaW5lclwiIH0sXHJcbiAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCB7IGNsYXNzTmFtZTogXCJwcmVsb2FkZXItY29udGVudCBwYWdpbmF0aW9uLWNlbnRlcmVkXCIgfSwgXCJMb2FkaW5nLi4uXCIpLFxyXG4gICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwgeyBjbGFzc05hbWU6IFwicHJlbG9hZGVyLWNvbnRlbnQgcHJlbG9hZGVyLWltZy1jb250YWluZXJcIiB9LFxyXG4gICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHsgY2xhc3NOYW1lOiBcInNtYWxsMVwiIH0sXHJcbiAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHsgY2xhc3NOYW1lOiBcInNtYWxsIGJhbGwgc21hbGxiYWxsMVwiIH0pLFxyXG4gICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCB7IGNsYXNzTmFtZTogXCJzbWFsbCBiYWxsIHNtYWxsYmFsbDJcIiB9KSxcclxuICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwgeyBjbGFzc05hbWU6IFwic21hbGwgYmFsbCBzbWFsbGJhbGwzXCIgfSksXHJcbiAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHsgY2xhc3NOYW1lOiBcInNtYWxsIGJhbGwgc21hbGxiYWxsNFwiIH0pKSxcclxuICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCB7IGNsYXNzTmFtZTogXCJzbWFsbDJcIiB9LFxyXG4gICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCB7IGNsYXNzTmFtZTogXCJzbWFsbCBiYWxsIHNtYWxsYmFsbDVcIiB9KSxcclxuICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwgeyBjbGFzc05hbWU6IFwic21hbGwgYmFsbCBzbWFsbGJhbGw2XCIgfSksXHJcbiAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHsgY2xhc3NOYW1lOiBcInNtYWxsIGJhbGwgc21hbGxiYWxsN1wiIH0pLFxyXG4gICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCB7IGNsYXNzTmFtZTogXCJzbWFsbCBiYWxsIHNtYWxsYmFsbDhcIiB9KSksXHJcbiAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwgeyBjbGFzc05hbWU6IFwidGFyZ2V0XCIgfSxcclxuICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwgeyBjbGFzc05hbWU6IFwiYmlnIGJhbGxcIiB9KSkpKSwgY29udGFpbmVyKTtcclxufVxyXG5mdW5jdGlvbiB1bm1vdW50KCkge1xyXG4gICAgdmFyIGV4aXN0aW5nQXBwID0gJCgnI2FwcEdyb3VwQXBwJykuZmluZCgnW2NsYXNzPWNvbnRhaW5lcl0nKTtcclxuICAgIGlmIChleGlzdGluZ0FwcC5sZW5ndGggPiAwKSB7XHJcbiAgICAgICAgUmVhY3RET00udW5tb3VudENvbXBvbmVudEF0Tm9kZShleGlzdGluZ0FwcFswXSk7XHJcbiAgICB9XHJcbn1cclxuJChkb2N1bWVudCkucmVhZHkoZnVuY3Rpb24gKCkge1xyXG4gICAgaWYgKCQoJyNhcHBHcm91cEFwcCcpLmZpbmQoJy5sYW5kaW5nLXBhZ2UtY29udGFpbmVyJykubGVuZ3RoIDwgMSkge1xyXG4gICAgICAgIHJlbmRlckxvYWRpbmcoKTtcclxuICAgIH1cclxuICAgIElub3Z4TG9hZGVyLmxvYWRlZE9uY2UoZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIElub3Z4TG9hZGVyLmFkZExhbmd1YWdlKCdhcHBHcm91cCcsIFVybFV0aWxpdGllcy5nZXRBcHBsaWNhdGlvblVybCgpLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIG9uQXBwR3JvdXBMb2FkKCk7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9KTtcclxufSk7XHJcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFwcC5qcy5tYXAiXX0=
